{"version":3,"sources":["./src/app/author.service.ts","./src/app/updatebook/updatebook.component.ts","./src/app/updatebook/updatebook.component.html","./src/app/token-interceptor.service.ts","./src/environments/environment.ts","./src/app/authors/authors.component.ts","./src/app/authors/authors.component.html","./src/app/book.service.ts","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/app/books/books.component.ts","./src/app/books/books.component.html","./src/app/updateauthor/updateauthor.component.ts","./src/app/updateauthor/updateauthor.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/addauthor/addauthor.component.ts","./src/app/addauthor/addauthor.component.html","./src/app/addbook/addbook.component.ts","./src/app/addbook/addbook.component.html","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/homebody/homebody.component.ts","./src/app/homebody/homebody.component.html","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/auth.guard.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/user.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient ,HttpResponse} from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorService {\n  item= {\n    authorname :'',\n    genre:'',\n    book1:'',\n    book2:'',\n    book3:'',\n    imageUrl:''}\n  \n  constructor( private http:HttpClient) { }\n  getAuthor(id:any){\n    return this.http.get(\"http://localhost:3000/seven/\"+id);\n  }\n  newAuthor(item:any)\n  {   \n    return this.http.post(\"http://localhost:3000/writter\",{\"writter\":item})\n    .subscribe(data =>{console.log(data)})\n  }\n  getAuthors(){\n    return this.http.get(\"http://localhost:3000/authors\");\n  }\n  deleteAuthor(id:any)\n  {\n\n    return this.http.delete(\"http://localhost:3000/delete/\"+id)\n\n  }\n  editAuthor(author:any)\n  {\n    console.log('client update')\n    return this.http.put(\"http://localhost:3000/renew\",author)\n    .subscribe(data =>{console.log(data)})\n  }\n  \n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookService } from '../book.service'\n\n\n@Component({\n  selector: 'app-updatebook',\n  templateUrl: './updatebook.component.html',\n  styleUrls: ['./updatebook.component.css']\n})\n\nexport class UpdatebookComponent implements OnInit {\n  bookitem= {\n    title :'',\n    genre:'',\n    author:'',\n    description:'',\n    imageUrl:''}\n \n  constructor(private router:Router,private bookService:BookService) { }\n\n  ngOnInit(): void {\n    let bookId = localStorage.getItem(\"editbookId\");\n    this.bookService.getBook(bookId).subscribe((data)=>{\n      this.bookitem=JSON.parse(JSON.stringify(data));\n  })\n  }\n  editBook()\n  {    \n    this.bookService.editBook(this.bookitem);   \n    alert(\"Success\");\n    this.router.navigate(['books']);\n  }\n\n}","<style>\n    #masthead {\n    min-height:199px;\n    background-image: url(assets/images/img9.jpg) !important;\n  \n    /* background-color:#004403; */\n    color:#aaaacc;\n  }\n  \n    </style>\n<div id=\"masthead\">  \n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-7\">\n          <h1>Update Book.\n            <p class=\"lead\"></p>\n          </h1>\n        </div>\n        <div class=\"col-md-5\">\n          <div class=\"well well-lg\"> \n            <div class=\"row\">\n              <div class=\"col-sm-12\">\n                \n              \n              </div>\n            </div> \n          </div>\n        </div>\n      </div> \n    </div><!-- /cont -->\n    \n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"top-spacer\"> </div>\n        </div>\n      </div> \n    </div><!-- /cont -->\n    \n  </div>\n  \n  \n  <div class=\"container\">\n    <div class=\"row\">\n      \n      <div class=\"col-md-12\"> \n        \n        <div class=\"panel\">\n          <div class=\"panel-body\">\n            \n            <div class=\"panel\">\n              <div class=\"panel-body\">\n                  <div class=\"registration-form\">\n                  <form class=\"login\"  (ngSubmit)=\"editBook()\">\n                      <div class=\"form-group\">\n                        <h3>Please change this form to update the book.</h3>\n                      </div>\n                     <br>\n                          <div class=\"form-group\">\n                        \n                        <input type=\"text\" name=\"title\"  class=\"form-control item\" id=\"FirstName\" [(ngModel)]=\"bookitem.title\" placeholder=\"Name of the book\">\n                       \n                        <label id=\"FirstName1\"></label>\n                      </div>\n                      <div class=\"form-group\">\n                        \n                        <input type=\"text\" name=\"genere\" class=\"form-control item\" id=\"LastName\" [(ngModel)]=\"bookitem.genre\" placeholder=\"Genre of the Book\">\n                      \n                        <label id=\"LastName1\"></label>\n                      </div>\n                      <div class=\"form-group\">\n                        \n                        <input type=\"text\" name=\"author\" class=\"form-control item\" id=\"Author\" [(ngModel)]=\"bookitem.author\" placeholder=\"Author\">\n                      \n                        <label id=\"Author1\"></label>\n                      </div>\n                      <div class=\"form-group\">\n                        \n                        <input type=\"text\" name=\"discription\" class=\"form-control item\" id=\"discription\" [(ngModel)]=\"bookitem.description\" placeholder=\"Add a discription about book\">\n                      \n                        <label id=\"discription1\"></label>\n                      </div>\n                      <div class=\"form-group\">\n                        <label>Insert an Image URL</label>\n                      <input type=\"text\" name=\"image\" class=\"form-control item\" id=\"img\" [(ngModel)]=\"bookitem.imageUrl\" >\n                        \n                      \n                        <label id=\"img1\"></label>\n                      </div>\n                          \n                      <div class=\"form-group\"> \n                          <div class=\"botton\">\n                              <button type=\"submit\" class=\"btn btn-block create-account\" id=\"loginBtn\">Update Book</button>\n                          </div>\n                      </div>\n                    </form>\n                  </div>\n                \n            \n            \n            \n          </div>\n        </div>\n                                                                                         \n                                                      \n                                                        \n         </div><!--/col-12-->\n    </div>\n  </div>\n                                                  \n                                                                                  \n  <hr>","import { Injectable, Injector } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport {AuthService} from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n\n  constructor(private injector:Injector) { }\n  intercept(req:any,nxt:any)\n  {\n    let authService = this.injector.get(AuthService)\n    let tokenizedReq = req.clone(\n      {\n        setHeaders:{\n          Authorization:`Bearer ${authService.getToken()}`\n        }\n      }\n    )\n    return nxt.handle(tokenizedReq)\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../auth.service';\nimport {Router} from '@angular/router'\nimport { AuthorService } from '../author.service'\n\n@Component({\n  selector: 'app-authors',\n  templateUrl: './authors.component.html',\n  styleUrls: ['./authors.component.css']\n})\n\n\n\nexport class AuthorsComponent implements OnInit {\n\n  constructor(private _router:Router,private AuthorService: AuthorService,\n    public _auth:AuthService){\n\n}\nngOnInit(): void{\n  this.AuthorService.getAuthors().subscribe((data)=>{\n    this.authors=JSON.parse(JSON.stringify(data));\n})\n}\neditAuthor(author:any)\n  {\n    localStorage.setItem(\"editauthorId\", author._id.toString());\n    this._router.navigate(['authors/updateauthor']);\n\n  }\ndeleteAuthor(author:any)\n  {\n    this.AuthorService.deleteAuthor(author._id)\n      .subscribe((data) => {\n        this.authors = this.authors.filter(p => p !== author);\n      })\n  \n\n  }\nauthors=[{\n  authorname :'',\n  genre:'',\n  book1:'',\n  book2:'', \n  book3:'',\n  imageUrl:''}]\n\n\n\n  loggedUser()\n{\n  this._router.navigate(['/add'])\n}\n}\n\n","<style>\n  #masthead {\n  min-height:199px;\n  background-image: url(assets/images/img9.jpg) !important;\n\n  /* background-color:#004403; */\n  color:#aaaacc;\n  }  \n</style>\n\n\n\n\n<div id=\"masthead\">  \n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-7\">\n          <h1>Authors\n            <p class=\"lead\"></p>\n          </h1>\n        </div>\n        <div class=\"col-md-5\">\n          <div class=\"well well-lg\"> \n            <div class=\"row\">\n              <div class=\"col-sm-12\">\n                \n              \n              </div>\n            </div> \n          </div>\n        </div>\n      </div> \n    </div><!-- /cont -->\n    \n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"top-spacer\"> </div>\n        </div>\n      </div> \n    </div><!-- /cont -->\n    \n  </div>\n  \n\n  <div class=\"container\">\n    <div class=\"row\">\n      \n      <div class=\"col-md-12\"> \n        \n        <div class=\"panel\">\n          <div class=\"panel-body\">\n\n            <div class=\"row\">        \n              <div class=\"col-md-12\">         \n                <div class=\"panel\">\n                  <div class=\"panel-body\">            \n                    <input type=\"button\" class=\"btn btn-primary\" *ngIf=\"_auth.loggedIn()\" (click)=\"loggedUser()\" value=\"Add Author\" id=\"loginBtn\" onclick=\"location.href='authors/addauthor'\" />\n                    \n                  </div>\n                </div>                           \n              </div><!--/col-12-->\n            </div>\n\n            <div *ngFor='let author of authors' class=\"row\">    \n              <br>\n              <div class=\"col-md-2 col-sm-3 text-center\">\n                <a class=\"story-title\" href=\"#\"><img alt=\"\" [src] = 'author.imageUrl' style=\"width:100px;height:100px\" class=\"img-circle\"></a>\n              </div>\n              <div class=\"col-md-10 col-sm-9\">\n                <h3>{{ author.authorname }}</h3>\n                <div class=\"row\">\n                  <div class=\"col-xs-9\">\n                    <h4><span class=\"label label-default\">{{ author.book1 }}</span></h4>\n                    <h4><small style=\"font-family:courier,'new courier';\" class=\"text-muted\">{{ author.genre }}  • </small></h4>\n                    \n                  </div>\n                  <div class=\"col-xs-3\"></div>\n                </div>\n                <br>\n              <button class=\"btn btn-primary\" style=\"cursor:pointer\" *ngIf=\"_auth.loggedIn()\" (click)=\"editAuthor(author)\" > Edit</button>\n                    <button class=\"btn btn-danger\" style=\"cursor:pointer\" *ngIf=\"_auth.loggedIn()\"(click)=\"deleteAuthor(author)\"style=\"margin-left: 10px;\"> Delete</button>\n      \n              </div>\n            </div>\n            <hr>\n\n          </div>\n        </div>                                                                                                                        \n      </div><!--/col-12-->\n    </div>\n  </div>","\nimport { Injectable } from '@angular/core';\nimport {HttpClient ,HttpResponse} from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n  item= {\n    title :'',\n    genre:'',\n    author:'',\n    discription:'',\n    imageUrl:''}\n  constructor( private http:HttpClient) { }\n  getBook(id:any){\n    return this.http.get(\"http://localhost:3000/\"+id);\n  }\n  getBooks(){\n    return this.http.get(\"http://localhost:3000/books\");\n  }\n\n  newBook(item:any)\n  {   \n    return this.http.post(\"http://localhost:3000/insert\",{\"book\":item})\n    .subscribe(data =>{console.log(data)})\n  }\n  deleteBook(id:any)\n  {\n\n    return this.http.delete(\"http://localhost:3000/remove/\"+id)\n\n  }\n  editBook(book:any)\n  {\n    console.log('client update')\n    return this.http.put(\"http://localhost:3000/update\",book)\n    .subscribe(data =>{console.log(data)})\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<style>\n    #masthead {\n    min-height:199px;\n    background-image: url(assets/images/img9.jpg) !important;\n  \n    /* background-color:#004403; */\n    color:#aaaacc;\n  }\n  \n    </style>\n  <div id=\"masthead\">  \n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-md-7\">\n            <h1>Welcome to Library\n              <p class=\"lead\"></p>\n            </h1>\n          </div>\n          <div class=\"col-md-5\">\n            <div class=\"well well-lg\"> \n              <div class=\"row\">\n                <div class=\"col-sm-12\">\n                  \n                \n                </div>\n              </div> \n            </div>\n          </div>\n        </div> \n      </div><!-- /cont -->\n      \n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <div class=\"top-spacer\"> </div>\n          </div>\n        </div> \n      </div><!-- /cont -->\n      \n    </div>\n    \n    \n    <div class=\"container\">\n      <div class=\"row\">\n        \n        <div class=\"col-md-12\"> \n          \n          <div class=\"panel\">\n            <div class=\"panel-body\">\n              \n              \n              \n              <!--/stories-->\n              <div class=\"row\">    \n                <br>\n                \n                <div class=\"col-md-12 col-md-12 text-center\">\n                  <img class=\"einstein\" alt=\"einstein\" src=\"assets/images/img2.jpg\" style=\"width:700px;height:400px,align-center\"  >\n  \n                </div>\n                <!-- <div class=\"col-md-10 col-sm-9\">\n                  \n                  <div class=\"row\">\n                    <div class=\"col-xs-4\">\n                      </div>\n                    <div class=\"col-xs-8\"></div>\n                    <img class=\"einstein\" alt=\"einstein\" src=\"assets/images/img2.jpg\" style=\"width:700px;height:400px,align-center\"  >\n                  </div>\n                  <br><br>\n                </div>\n              </div> -->\n            </div>\n              <hr>\n              \n              \n              \n              \n            \n              \n            </div>\n          </div>\n                                                                                           \n                                                        \n                                                          \n           </div><!--/col-12-->\n      </div>\n    </div>\n                                                    \n                                                                                    \n    <hr>","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../auth.service';\nimport {Router} from '@angular/router'\nimport { BookService } from '../book.service'\n\n@Component({\n  selector: 'app-books',\n  templateUrl: './books.component.html',\n  styleUrls: ['./books.component.css']\n})\nexport class BooksComponent implements OnInit {\n\n  constructor(private _router:Router,private bookService: BookService,\n    public _auth:AuthService){\n\n}\nngOnInit(): void{\n  this.bookService.getBooks().subscribe((data)=>{\n    this.books=JSON.parse(JSON.stringify(data));\n})\n}\neditBook(book:any)\n  {\n    localStorage.setItem(\"editbookId\", book._id.toString());\n    this._router.navigate(['books/updatebook']);\n\n  }\n  deleteBook(book:any)\n  {\n    this.bookService.deleteBook(book._id)\n      .subscribe((data) => {\n        this.books = this.books.filter(p => p !== book);\n      })\n  \n\n  }\nbooks=[{\n  title :'',\n  genre:'',\n  author:'',\n  description:'', \n  imageUrl:''}]\n\n\n\n  loggedUser()\n{\n  this._router.navigate(['/add'])\n}\n}\n","  <style>\n    #masthead {\n    min-height:199px;\n    background-image: url(assets/images/img9.jpg) !important;\n  \n    /* background-color:#004403; */\n    color:#aaaacc;\n    }  \n  </style>\n\n\n\n\n  <div id=\"masthead\">  \n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-md-7\">\n            <h1>Books\n              <p class=\"lead\"></p>\n            </h1>\n          </div>\n          <div class=\"col-md-5\">\n            <div class=\"well well-lg\"> \n              <div class=\"row\">\n                <div class=\"col-sm-12\">\n                  \n                \n                </div>\n              </div> \n            </div>\n          </div>\n        </div> \n      </div><!-- /cont -->\n      \n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <div class=\"top-spacer\"> </div>\n          </div>\n        </div> \n      </div><!-- /cont -->\n      \n    </div>\n    \n\n    <div class=\"container\">\n      <div class=\"row\">\n        \n        <div class=\"col-md-12\"> \n          \n          <div class=\"panel\">\n            <div class=\"panel-body\">\n\n              <div class=\"row\">        \n                <div class=\"col-md-12\">         \n                  <div class=\"panel\">\n                    <div class=\"panel-body\">            \n                      <input type=\"button\" class=\"btn btn-primary\" *ngIf=\"_auth.loggedIn()\" (click)=\"loggedUser()\" value=\"Add Book\" id=\"loginBtn\" onclick=\"location.href='books/addbook'\" />\n                      \n                    </div>\n                  </div>                           \n                </div><!--/col-12-->\n              </div>\n\n              <div *ngFor='let book of books' class=\"row\">    \n                <br>\n                <div class=\"col-md-2 col-sm-3 text-center\">\n                  <a class=\"story-title\" href=\"#\"><img alt=\"\" [src] = 'book.imageUrl' style=\"width:100px;height:100px\" class=\"img-circle\"></a>\n                </div>\n                <div class=\"col-md-10 col-sm-9\">\n                  <h3>{{ book.title }}</h3>\n                  <div class=\"row\">\n                    <div class=\"col-xs-9\">\n                      <h4><span class=\"label label-default\">{{ book.author }}</span></h4>\n                      <h4><small style=\"font-family:courier,'new courier';\" class=\"text-muted\">{{ book.genre }}  • </small></h4>\n                      \n                    </div>\n                    <div class=\"col-xs-3\"></div>\n                  </div>\n                  <br>\n                <p>{{ book.description }}</p>\n                <button class=\"btn btn-primary\" style=\"cursor:pointer\" *ngIf=\"_auth.loggedIn()\" (click)=\"editBook(book)\" > Edit</button>\n                      <button class=\"btn btn-danger\" style=\"cursor:pointer\" *ngIf=\"_auth.loggedIn()\"(click)=\"deleteBook(book)\"style=\"margin-left: 10px;\"> Delete</button>\n        \n                </div>\n              </div>\n              <hr>\n\n            </div>\n          </div>                                                                                                                        \n        </div><!--/col-12-->\n      </div>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthorService } from '../author.service'\n\n@Component({\n  selector: 'app-updateauthor',\n  templateUrl: './updateauthor.component.html',\n  styleUrls: ['./updateauthor.component.css']\n})\nexport class UpdateauthorComponent implements OnInit {\n  authoritem= {\n    authorname :'',\n    genre:'',\n    book1:'',\n    book2:'',\n    book3:'',\n    imageUrl:''}\n\n  constructor(private router:Router,private authorService:AuthorService) { }\n\n  ngOnInit(): void {\n    let authorId = localStorage.getItem(\"editauthorId\");\n    this.authorService.getAuthor(authorId).subscribe((data)=>{\n      this.authoritem=JSON.parse(JSON.stringify(data));\n  })\n  }\n  editAuthor()\n  {    \n    this.authorService.editAuthor(this.authoritem);   \n    alert(\"Success\");\n    this.router.navigate(['authors']);\n  }\n\n}\n","<style>\n    #masthead {\n    min-height:199px;\n    background-image: url(assets/images/img9.jpg) !important;\n  \n    /* background-color:#004403; */\n    color:#aaaacc;\n  }\n  </style>\n<div id=\"masthead\">  \n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-7\">\n          <h1>Update Author\n            <p class=\"lead\"></p>\n          </h1>\n        </div>\n        <div class=\"col-md-5\">\n          <div class=\"well well-lg\"> \n            <div class=\"row\">\n              <div class=\"col-sm-12\">\n                \n              \n              </div>\n            </div> \n          </div>\n        </div>\n      </div> \n    </div><!-- /cont -->\n    \n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"top-spacer\"> </div>\n        </div>\n      </div> \n    </div><!-- /cont -->\n    \n  </div>\n  \n  \n  <div class=\"container\">\n    <div class=\"row\">\n      \n      <div class=\"col-md-12\"> \n        \n        <div class=\"panel\">\n          <div class=\"panel-body\">\n            <div class=\"registration-form\">\n              <form class=\"login\" (ngSubmit)=\"editAuthor()\">\n                  <div class=\"form-group\">\n                    <h3>Please Change this form to update author details.</h3>\n                  </div>\n                 <br>\n                      <div class=\"form-group\">\n                    \n                    <input type=\"text\" name=\"author\" class=\"form-control item\" id=\"FirstName\" [(ngModel)]=\"authoritem.authorname\" placeholder=\"Name of the Author\">\n                   \n                    <label id=\"FirstName1\"></label>\n                  </div>\n                  <div class=\"form-group\">\n                    \n                    <input type=\"text\" name=\"genere\" class=\"form-control item\" id=\"LastName\" [(ngModel)]=\"authoritem.genre\" placeholder=\"Author Genres\">\n                  \n                    <label id=\"LastName1\"></label>\n                  </div>\n                  <!-- <div class=\"form-group\">\n                    \n                    <input type=\"text\" name=\"discription\" class=\"form-control item\" id=\"LastName\" [(ngModel)]=\"authoritem.description\" placeholder=\"Details about Author\">\n                  \n                    <label id=\"LastName1\"></label>\n                  </div> -->\n                  <div class=\"form-group\">\n                    \n                    <input type=\"text\" name=\"book1\" class=\"form-control item\" id=\"book1\" [(ngModel)]=\"authoritem.book1\" placeholder=\"Author Book 1\">\n                  \n                    <label id=\"book11\"></label>\n                  </div>\n                  <div class=\"form-group\">\n                    \n                    <input type=\"text\" name=\"book2\" class=\"form-control item\" id=\"LastName\" [(ngModel)]=\"authoritem.book2\" placeholder=\"Author Book 2\">\n                  \n                    <label id=\"book21\"></label>\n                  </div>\n                  <div class=\"form-group\">\n                    \n                    <input type=\"text\" name=\"book3\" class=\"form-control item\" id=\"LastName\" [(ngModel)]=\"authoritem.book3\" placeholder=\"Author Book 3\">\n                  \n                    <label id=\"book31\"></label>\n                  </div>\n                  <div class=\"form-group\">\n                  <label>Insert an Image URL</label>\n                  <input type=\"text\" name=\"image\" class=\"form-control item\"[(ngModel)]=\"authoritem.imageUrl\"  id=\"img\" >\n                    \n                  \n                    <label id=\"imgback1\"></label>\n                  </div>\n                      \n                  <div class=\"form-group\"> \n                      <div class=\"botton\">\n                          <button type=\"submit\" class=\"btn btn-block create-account\" id=\"loginBtn\">Update Author</button>\n                      </div>\n                  </div>\n                </form>\n              </div>\n            \n            \n            \n              \n          </div>\n        </div>\n                                                                                         \n                                                      \n                                                        \n         </div><!--/col-12-->\n    </div>\n  </div>\n                                                  \n                                                                                  \n  <hr>\n  \n  <div class=\"container\" id=\"footer\">\n    <div class=\"row\">\n      <div class=\"col col-sm-12\">\n        \n        <h1>Follow Us</h1>\n        <div class=\"btn-group\">\n         <a class=\"btn btn-twitter btn-lg\" href=\"#\"><i class=\"icon-twitter icon-large\"></i> Twitter</a>\n         <a class=\"btn btn-facebook btn-lg\" href=\"#\"><i class=\"icon-facebook icon-large\"></i> Facebook</a>\n         <a class=\"btn btn-google-plus btn-lg\" href=\"#\"><i class=\"icon-google-plus icon-large\"></i> Google+</a>\n        </div>\n        \n      </div>\n    </div>\n  </div>\n  \n  <hr>\n  \n  <hr>\n  ","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'LibAppAngular';\n}\n","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { AuthorService } from '../author.service'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-addauthor',\n  templateUrl: './addauthor.component.html',\n  styleUrls: ['./addauthor.component.css']\n})\nexport class AddauthorComponent implements OnInit {\n\n  constructor(private AuthorService: AuthorService,private router: Router) { }\n  authoritem = {\n    authorname :'',\n    genre:'',\n    book1:'',\n    book2:'',\n    book3:'',\n    imageUrl:''}\n\n  ngOnInit(): void {\n  }\n  AddAuthor()\n  {    \n    this.AuthorService.newAuthor(this.authoritem);\n    console.log(\"Called\");    \n    alert(\"Success\");\n    this.router.navigate(['/authors']);\n  }\n}\n\n\n","<style>\n    #masthead {\n    min-height:199px;\n    background-image: url(assets/images/img9.jpg) !important;\n  \n    /* background-color:#004403; */\n    color:#aaaacc;\n  }\n  </style>\n<div id=\"masthead\">  \n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-7\">\n          <h1>Create New Authors\n            <p class=\"lead\"></p>\n          </h1>\n        </div>\n        <div class=\"col-md-5\">\n          <div class=\"well well-lg\"> \n            <div class=\"row\">\n              <div class=\"col-sm-12\">\n                \n              \n              </div>\n            </div> \n          </div>\n        </div>\n      </div> \n    </div><!-- /cont -->\n    \n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"top-spacer\"> </div>\n        </div>\n      </div> \n    </div><!-- /cont -->\n    \n  </div>\n  \n  \n  <div class=\"container\">\n    <div class=\"row\">\n      \n      <div class=\"col-md-12\"> \n        \n        <div class=\"panel\">\n          <div class=\"panel-body\">\n            <div class=\"registration-form\">\n              <form class=\"login\" (ngSubmit)=\"AddAuthor()\">\n                  <div class=\"form-group\">\n                    <h3>Please fill this form to create a New Author.</h3>\n                  </div>\n                 <br>\n                      <div class=\"form-group\">\n                    \n                    <input type=\"text\" name=\"author\" class=\"form-control item\" id=\"FirstName\" [(ngModel)]=\"authoritem.authorname\" placeholder=\"Name of the Author\">\n                   \n                    <label id=\"FirstName1\"></label>\n                  </div>\n                  <div class=\"form-group\">\n                    \n                    <input type=\"text\" name=\"genere\" class=\"form-control item\" id=\"LastName\" [(ngModel)]=\"authoritem.genre\" placeholder=\"Author Genres\">\n                  \n                    <label id=\"LastName1\"></label>\n                  </div>\n                  <!-- <div class=\"form-group\">\n                    \n                    <input type=\"text\" name=\"discription\" class=\"form-control item\" id=\"LastName\" [(ngModel)]=\"authoritem.description\" placeholder=\"Details about Author\">\n                  \n                    <label id=\"LastName1\"></label>\n                  </div> -->\n                  <div class=\"form-group\">\n                    \n                    <input type=\"text\" name=\"book1\" class=\"form-control item\" id=\"book1\" [(ngModel)]=\"authoritem.book1\" placeholder=\"Author Book 1\">\n                  \n                    <label id=\"book11\"></label>\n                  </div>\n                  <div class=\"form-group\">\n                    \n                    <input type=\"text\" name=\"book2\" class=\"form-control item\" id=\"LastName\" [(ngModel)]=\"authoritem.book2\" placeholder=\"Author Book 2\">\n                  \n                    <label id=\"book21\"></label>\n                  </div>\n                  <div class=\"form-group\">\n                    \n                    <input type=\"text\" name=\"book3\" class=\"form-control item\" id=\"LastName\" [(ngModel)]=\"authoritem.book3\" placeholder=\"Author Book 3\">\n                  \n                    <label id=\"book31\"></label>\n                  </div>\n                  <div class=\"form-group\">\n                  <label>Insert an Image URL</label>\n                  <input type=\"text\" name=\"image\" class=\"form-control item\"[(ngModel)]=\"authoritem.imageUrl\"  id=\"img\" >\n                    \n                  \n                    <label id=\"imgback1\"></label>\n                  </div>\n                      \n                  <div class=\"form-group\"> \n                      <div class=\"botton\">\n                          <button type=\"submit\" class=\"btn btn-block create-account\" id=\"loginBtn\">Add Author</button>\n                      </div>\n                  </div>\n                </form>\n              </div>\n            \n            \n            \n              \n          </div>\n        </div>\n                                                                                         \n                                                      \n                                                        \n         </div><!--/col-12-->\n    </div>\n  </div>\n                                                  \n                                                                                  \n  <hr>\n  \n  <div class=\"container\" id=\"footer\">\n    <div class=\"row\">\n      <div class=\"col col-sm-12\">\n        \n        <h1>Follow Us</h1>\n        <div class=\"btn-group\">\n         <a class=\"btn btn-twitter btn-lg\" href=\"#\"><i class=\"icon-twitter icon-large\"></i> Twitter</a>\n         <a class=\"btn btn-facebook btn-lg\" href=\"#\"><i class=\"icon-facebook icon-large\"></i> Facebook</a>\n         <a class=\"btn btn-google-plus btn-lg\" href=\"#\"><i class=\"icon-google-plus icon-large\"></i> Google+</a>\n        </div>\n        \n      </div>\n    </div>\n  </div>\n  \n  <hr>\n  \n  <hr>\n  ","import { Component, OnInit } from '@angular/core';\nimport { BookService } from '../book.service'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-addbook',\n  templateUrl: './addbook.component.html',\n  styleUrls: ['./addbook.component.css']\n})\n\n\nexport class AddbookComponent implements OnInit {\n\n  constructor(private BookService: BookService,private router: Router){  } \n  bookitem= {\n    title :'',\n    genre:'',\n    author:'',\n    description:'',\n    imageUrl:''}\n // productItem: IProduct;\n  ngOnInit() {\n  }\n  AddBook()\n  {    \n    this.BookService.newBook(this.bookitem);\n    console.log(\"Called\");    \n    alert(\"Success\");\n    this.router.navigate(['/books']);\n  }\n}\n","<style>\n    #masthead {\n    min-height:199px;\n    background-image: url(assets/images/img9.jpg) !important;\n  \n    /* background-color:#004403; */\n    color:#aaaacc;\n  }\n  \n    </style>\n<div id=\"masthead\">  \n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-7\">\n          <h1>Create New book\n            <p class=\"lead\"></p>\n          </h1>\n        </div>\n        <div class=\"col-md-5\">\n          <div class=\"well well-lg\"> \n            <div class=\"row\">\n              <div class=\"col-sm-12\">\n                \n              \n              </div>\n            </div> \n          </div>\n        </div>\n      </div> \n    </div><!-- /cont -->\n    \n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"top-spacer\"> </div>\n        </div>\n      </div> \n    </div><!-- /cont -->\n    \n  </div>\n  \n  \n  <div class=\"container\">\n    <div class=\"row\">\n      \n      <div class=\"col-md-12\"> \n        \n        <div class=\"panel\">\n          <div class=\"panel-body\">\n            \n            <div class=\"panel\">\n              <div class=\"panel-body\">\n                  <div class=\"registration-form\">\n                  <form class=\"login\"  (ngSubmit)=\"AddBook()\">\n                      <div class=\"form-group\">\n                        <h3>Please fill this form to create a New Book.</h3>\n                      </div>\n                     <br>\n                          <div class=\"form-group\">\n                        \n                        <input type=\"text\" name=\"title\"  class=\"form-control item\" id=\"FirstName\" [(ngModel)]=\"bookitem.title\" placeholder=\"Name of the book\">\n                       \n                        <label id=\"FirstName1\"></label>\n                      </div>\n                      <div class=\"form-group\">\n                        \n                        <input type=\"text\" name=\"genere\" class=\"form-control item\" id=\"LastName\" [(ngModel)]=\"bookitem.genre\" placeholder=\"Genre of the Book\">\n                      \n                        <label id=\"LastName1\"></label>\n                      </div>\n                      <div class=\"form-group\">\n                        \n                        <input type=\"text\" name=\"author\" class=\"form-control item\" id=\"Author\" [(ngModel)]=\"bookitem.author\" placeholder=\"Author\">\n                      \n                        <label id=\"Author1\"></label>\n                      </div>\n                      <div class=\"form-group\">\n                        \n                        <input type=\"text\" name=\"discription\" class=\"form-control item\" id=\"discription\" [(ngModel)]=\"bookitem.description\" placeholder=\"Add a discription about book\">\n                      \n                        <label id=\"discription1\"></label>\n                      </div>\n                      <div class=\"form-group\">\n                        <label>Insert an Image URL</label>\n                      <input type=\"text\" name=\"image\" class=\"form-control item\" id=\"img\" [(ngModel)]=\"bookitem.imageUrl\" >\n                        \n                      \n                        <label id=\"img1\"></label>\n                      </div>\n                          \n                      <div class=\"form-group\"> \n                          <div class=\"botton\">\n                              <button type=\"submit\" class=\"btn btn-block create-account\" id=\"loginBtn\">Add Book</button>\n                          </div>\n                      </div>\n                    </form>\n                  </div>\n                \n            \n            \n            \n          </div>\n        </div>\n                                                                                         \n                                                      \n                                                        \n         </div><!--/col-12-->\n    </div>\n  </div>\n                                                  \n                                                                                  \n  <hr>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\nimport {AuthService} from './auth.service';\nimport {AuthGuard} from './auth.guard';\nimport { TokenInterceptorService } from './token-interceptor.service';\nimport { HeaderComponent } from './header/header.component';\nimport { HomebodyComponent } from './homebody/homebody.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { BooksComponent } from './books/books.component';\nimport { AuthorsComponent } from './authors/authors.component';\nimport { AddbookComponent } from './addbook/addbook.component';\nimport { AddauthorComponent } from './addauthor/addauthor.component';\nimport { BookService } from './book.service';\nimport { UpdatebookComponent } from './updatebook/updatebook.component';\nimport { AuthorService } from './author.service';\nimport { UserService } from './user.service';\nimport { UpdateauthorComponent } from './updateauthor/updateauthor.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    HomebodyComponent,\n    FooterComponent,\n    LoginComponent,\n    SignupComponent,\n    WelcomeComponent,\n    BooksComponent,\n    AuthorsComponent,\n    AddbookComponent,\n    AddauthorComponent,\n    UpdatebookComponent,\n    UpdateauthorComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n\n  ],\n  providers: [AuthService,UserService,BookService,AuthGuard,AuthorService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Router } from '@angular/router'\n\n@Injectable()\nexport class AuthService {\n\n  \n  private _loginUrl = \"http://localhost:3000/login\";\n  \n  constructor(private http: HttpClient) { }\n\n\n  loginUser(user:any)\n  {\n    return this.http.post<any>(this._loginUrl, user)\n  }\n\n  loggedIn()\n  {\n    return !!localStorage.getItem('token')\n  }\n  getToken()\n  {\n    return localStorage.getItem('token')\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../auth.service';\nimport {Router} from '@angular/router'\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  constructor(public _auth:AuthService,\n    private _router:Router){\n\n}\n\n\n  ngOnInit(): void {\n  }\n  logoutUser()\n{\nlocalStorage.removeItem('token')\nthis._router.navigate(['/login'])\n}\n}\n","<header class=\"navbar navbar-bright navbar-fixed-top\" role=\"banner\">\n    <div class=\"container\">\n      <div class=\"navbar-header\">\n        <button class=\"navbar-toggle\" type=\"button\" data-toggle=\"collapse\" data-target=\".navbar-collapse\">\n          <span class=\"sr-only\">Toggle navigation</span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n        </button>\n        <a routerLink=\"/\" class=\"navbar-brand\">Home</a>\n      </div>\n      <nav class=\"collapse navbar-collapse\" role=\"navigation\">\n        <!-- <ul class=\"nav navbar-nav\">\n          <li>\n            <a href=\"#\">Category</a>\n          </li>\n          <li>\n            <a href=\"#\">Category</a>\n          </li>\n      </ul> -->\n\n\n\n\n\n\n      <ul class=\"nav navbar-right navbar-nav\">\n          <!-- <%for(i=0;i<nav.length;i++){%>\n              <li>\n                  <a href=\"<%=nav[i].link%>\"><%=nav[i].name%></a>\n                </li>\n          <%}%> -->\n          <li>\n            <a routerLink=\"/books\">BOOKS</a>\n          </li>\n          <li>\n            <a routerLink=\"/authors\">AUTHORS</a>\n          </li>\n          \n          <li>\n            <a routerLink=\"/signup\">SIGN UP</a>\n          </li>\n          <li>\n            <a routerLink=\"/login\" *ngIf=\"!_auth.loggedIn()\" routerLinkActive=\"active\">LOGIN</a>\n          </li>\n          <li>\n            <a  *ngIf=\"_auth.loggedIn()\" (click)=\"logoutUser()\">LOG OUT</a>\n          </li>\n      </ul>\n\n\n\n\n\n        <!-- <ul class=\"nav navbar-right navbar-nav\">\n          <li class=\"dropdown\">\n            <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\"><i class=\"glyphicon glyphicon-search\"></i></a>\n            <ul class=\"dropdown-menu\" style=\"padding:12px;\">\n              <form class=\"form-inline\">\n                <button type=\"submit\" class=\"btn btn-default pull-right\"><i class=\"glyphicon glyphicon-search\"></i></button><input type=\"text\" class=\"form-control pull-left\" placeholder=\"Search\">\n              </form>\n            </ul>\n          </li>\n        </ul> -->\n      </nav>\n    </div>\n  </header>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-sm-6\">\n          <ul class=\"list-inline\">\n            <li><i class=\"icon-facebook icon-2x\"></i></li>\n            <li><i class=\"icon-twitter icon-2x\"></i></li>\n            <li><i class=\"icon-google-plus icon-2x\"></i></li>\n            <li><i class=\"icon-pinterest icon-2x\"></i></li>\n          </ul>\n          \n        </div>\n        <div class=\"col-sm-6\">\n          <p class=\"pull-right\">Developed by <i class=\"icon-heart-empty\"></i> <a href=\"https://mail.google.com/mail/?view=cm&fs=1&to=sudeepsuseelan@gmail.com\">Sudeep</a></p>      \n  \n        </div>\n      </div>\n    </div>\n  </footer>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-homebody',\n  templateUrl: './homebody.component.html',\n  styleUrls: ['./homebody.component.css']\n})\nexport class HomebodyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<style>\n  #masthead {\n  min-height:199px;\n  background-image: url(assets/images/img9.jpg) !important;\n\n  /* background-color:#004403; */\n  color:#aaaacc;\n}\n\n  </style>\n<div id=\"masthead\">  \n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-7\">\n          <h1>Library\n            <p class=\"lead\"></p>\n          </h1>\n        </div>\n        <div class=\"col-md-5\">\n          <div class=\"well well-lg\"> \n            <div class=\"row\">\n              <div class=\"col-sm-12\">\n                \n              \n              </div>\n            </div> \n          </div>\n        </div>\n      </div> \n    </div><!-- /cont -->\n    \n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"top-spacer\"> </div>\n        </div>\n      </div> \n    </div><!-- /cont -->\n    \n  </div>\n  \n  \n  <div class=\"container\">\n    <div class=\"row\">\n      \n      <div class=\"col-md-12\"> \n        \n        <div class=\"panel\">\n          <div class=\"panel-body\">\n            \n            \n            \n            <!--/stories-->\n            <div class=\"row\">    \n              <br>\n              \n              <div class=\"col-md-12 col-md-12 text-center\">\n                <img class=\"einstein\" alt=\"einstein\" src=\"assets/images/img2.jpg\" style=\"width:700px;height:400px,align-center\"  >\n\n              </div>\n              <!-- <div class=\"col-md-10 col-sm-9\">\n                \n                <div class=\"row\">\n                  <div class=\"col-xs-4\">\n                    </div>\n                  <div class=\"col-xs-8\"></div>\n                  <img class=\"einstein\" alt=\"einstein\" src=\"assets/images/img2.jpg\" style=\"width:700px;height:400px,align-center\"  >\n                </div>\n                <br><br>\n              </div>\n            </div> -->\n          </div>\n            <hr>\n            \n            \n            \n            \n          \n            \n          </div>\n        </div>\n                                                                                         \n                                                      \n                                                        \n         </div><!--/col-12-->\n    </div>\n  </div>\n                                                  \n                                                                                  \n  <hr>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor(private UserService: UserService,private router: Router) { }\n  UserDetail= {\n    firstname :'',\n    lastnane:'',\n    username:'',\n    email:'',\n    mobno:'',\n    password:''\n\n  }\n  AddUser()\n  {\n    this.UserService.newUser(this.UserDetail);\n    console.log(\"Called\");    \n    alert(\"Success\");\n    this.router.navigate(['/books']);\n  }\n  \n  ngOnInit(): void {\n  }\n\n}\n","<style>\n    #masthead {\n    min-height:199px;\n    background-image: url(assets/images/img9.jpg) !important;\n  \n    /* background-color:#004403; */\n    color:#aaaacc;\n  }\n  \n    </style>\n<div id=\"masthead\">  \n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-7\">\n          <h1>Sign-Up\n            <p class=\"lead\"></p>\n          </h1>\n        </div>\n        <div class=\"col-md-5\">\n          <div class=\"well well-lg\"> \n            <div class=\"row\">\n              <div class=\"col-sm-12\">\n                \n              \n              </div>\n            </div> \n          </div>\n        </div>\n      </div> \n    </div><!-- /cont -->\n    \n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"top-spacer\"> </div>\n        </div>\n      </div> \n    </div><!-- /cont -->\n    \n  </div>\n  \n  \n  <div class=\"container\">\n    <div class=\"row\">\n      \n      <div class=\"col-md-12\"> \n        \n        <div class=\"panel\">\n          <div class=\"panel-body\">\n              <div class=\"registration-form\">\n              <form class=\"login\" method=\"POST\" #userdetail=\"ngForm\" action = \"/signup\" (ngSubmit)=\"AddUser()\">\n                  <div class=\"form-group\">\n                    <h3>Please fill this form to create an account.</h3>\n                  </div>\n                 <br>\n\n\n                    <div class=\"form-group\">\n                      <label>First Name</label>\n                      <input type=\"text\" name=\"fname\"  class=\"form-control item\" [(ngModel)]=\"UserDetail.firstname\" \n                         id=\"FirstName\" #fname=\"ngModel\" placeholder=\"Enter your first name\" required>\n                      <label *ngIf=\"fname.invalid && (fname.dirty || fname.touched) && fname.errors.required\" class=\"alert alert-danger\">\n                      <p>First Name is required.</p>                             \n                      </label>\n                    </div>\n                  \n                  <div class=\"form-group\">\n                    <label>Last Name</label>                    \n                    <input type=\"text\" name=\"lname\" class=\"form-control item\" [(ngModel)]=\"UserDetail.lastnane\" \n                    id=\"LastName\" #lname=\"ngModel\" placeholder=\"Enter your last name\" required>\n                      <label *ngIf=\"lname.invalid && (lname.dirty || lname.touched) && lname.errors.required\" class=\"alert alert-danger\">\n                      <p>Last Name is required.</p>                             \n                      </label>\n                  </div>\n\n\n                  <div class=\"form-group\">\n                    <label>User Name</label>                    \n                    <input type=\"text\" name=\"username\"  class=\"form-control item\" [(ngModel)]=\"UserDetail.username\" \n                    id=\"UserName\" #username=\"ngModel\" placeholder=\"Choose a user name\" required minlength=\"4\">\n                    <label *ngIf=\"username.invalid && (username.dirty || username.touched) && username.errors.required\" class=\"alert alert-danger\">\n                      <p>User name is required.</p>                             \n                    </label>\n                    <label *ngIf=\"username.invalid && username.errors.minlength\" class=\"alert alert-danger\">\n                      <p>User name must be at least 4 characters long.</p>               \n                    </label>\n                  </div>\n\n\n                  <div class=\"form-group\">\n                    <label>E-Mail</label>                   \n                    <input type=\"text\" name=\"email\" class=\"form-control item\" [(ngModel)]=\"UserDetail.email\" \n                    id=\"Mail\" #email=\"ngModel\" placeholder=\"E-Mail\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" required>\n                    <label *ngIf=\"email.invalid && (email.dirty || email.touched) && email.errors.required\" class=\"alert alert-danger\">\n                      <p>Email is required.</p>                             \n                    </label>\n                    <label *ngIf=\"email.invalid && email.errors.pattern\" class=\"alert alert-danger\">\n                      <p>Enter a valid Email</p>               \n                    </label>\n                  </div>\n\n\n                  <div class=\"form-group\">\n                    <label>Mobile Number</label>          \n                    <input type=\"text\" name=\"mno\" class=\"form-control item\" [(ngModel)]=\"UserDetail.mobno\" \n                    id=\"Mobile\" #mobnum=\"ngModel\" placeholder=\"Enter 10 digit mobile number \" pattern=\"^((\\\\+91-?)|0)?[0-9]{10}$\" required>\n                    <label *ngIf=\"mobnum.invalid && (mobnum.dirty || mobnum.touched) && mobnum.errors.required\" class=\"alert alert-danger\">\n                      <p>Mobile number is required.</p>                             \n                    </label>\n                    <label *ngIf=\"mobnum.invalid && mobnum.errors.pattern\" class=\"alert alert-danger\">\n                      <p>Enter a valid Mobile number</p>               \n                    </label>\n                  </div>\n\n                  <div class=\"form-group\">\n                      <label>Password</label>\n                      <!-- <span id=\"passreq\">[ ! ]</span>\n                       <div id=\"myModal\" class=\"modal\">\n                      <div class=\"modal-content\">\n                            <span class=\"close\">&times;</span>\n                            <h5>Password Requirment</h5>\n                            <ul>\n                              <li>Minimum 8 characters.</li>\n                              <li>Atleast one numeric value.</li>\n                              <li>Atleast one small letter.</li>\n                              <li>Atleast one capital letter.</li><br>\n                              <p>Atleast one special character. (Recommended)</p>\n                            \n                            </ul>\n                          </div>\n            \n                    </div> -->\n                   \n                    <input type=\"password\" name=\"password\"  class=\"form-control item\" [(ngModel)]=\"UserDetail.password\"\n                    id=\"password\" #psw=\"ngModel\" placeholder=\"Enter password\" required minlength=\"8\">\n                    <label *ngIf=\"psw.invalid && (psw.dirty || psw.touched) && psw.errors.required\" class=\"alert alert-danger\">\n                      <p>Password is required.</p>                             \n                    </label>\n                    <label *ngIf=\"psw.invalid && psw.errors.minlength\" class=\"alert alert-danger\">\n                      <p>User name must be at least 8 characters long.</p>               \n                    </label>\n                  </div>\n\n\n                 \n                \n                  \n                         \n                      \n                  <div class=\"form-group\"> \n                      <div class=\"botton\">\n                          <button type=\"submit\" [disabled]=\"userdetail.form.invalid\" class=\"btn btn-block create-account\" id=\"loginBtn\">Create Account</button>\n                      </div>\n                  </div>\n                </form>\n              </div>\n            \n            \n            \n            \n            \n          \n            \n          </div>\n        </div>\n                                                                                         \n                                                      \n                                                        \n         </div><!--/col-12-->\n    </div>\n  </div>\n  <hr>","import { Injectable } from '@angular/core';\nimport { CanActivate,Router} from '@angular/router';\nimport {AuthService} from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private _auth:AuthService,private _router:Router)\n  {\n\n  }\n  canActivate():boolean{\n    if (this._auth.loggedIn())\n    {\n      console.log('true')\n      return true\n\n    }\n    else{\n      this._router.navigate(['/login'])\n      return false\n\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth.guard';\nimport { AddauthorComponent } from './addauthor/addauthor.component';\nimport { AddbookComponent } from './addbook/addbook.component';\nimport { AuthorsComponent } from './authors/authors.component';\nimport { BooksComponent } from './books/books.component';\nimport { HomebodyComponent } from './homebody/homebody.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { UpdatebookComponent } from './updatebook/updatebook.component';\nimport { UpdateauthorComponent } from './updateauthor/updateauthor.component';\n\nconst routes: Routes = [\n      {\n        path:'',component: HomebodyComponent\n      },\n      {\n        path:'login',component: LoginComponent \n      },\n      {\n        path:'signup',component: SignupComponent \n      },\n      {\n        path:'welcome',component:WelcomeComponent\n      },\n      {\n        path:'books',component:BooksComponent\n      },\n      {\n        path:'authors',component: AuthorsComponent\n      },\n      {\n        path:'books/addbook',\n        canActivate: [AuthGuard],\n        component:AddbookComponent\n      },\n      {\n        path:'authors/addauthor',\n        canActivate: [AuthGuard],\n        component:AddauthorComponent\n      },\n      {\n        path:'books/updatebook',\n        canActivate: [AuthGuard],\n        component: UpdatebookComponent\n      },\n      {\n        path:'authors/updateauthor',\n        canActivate: [AuthGuard],\n        component: UpdateauthorComponent\n      }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router'\nimport { FormBuilder,Validators} from '@angular/forms';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  user={uname:'',\n  password:''}\n\n  constructor(private _auth: AuthService,\n              private _router:Router,private fb:FormBuilder) { }\n            \n          \n \n  ngOnInit() {\n  }\n\n  loginUser () {\n    \n    this._auth.loginUser(this.user)\n    .subscribe(\n      res => {\n        localStorage.setItem('token', res.token) \n        this._router.navigate(['/welcome'])\n      },\n      err => {\n        console.log(err);\n        this._router.navigate([''])\n      }\n    ) \n  }\n\n}\n","\n<style>\n    #masthead {\n    min-height:199px;\n    background-image: url(assets/images/img9.jpg) !important;\n  \n    /* background-color:#004403; */\n    color:#aaaacc;\n  }\n  \n    </style>\n<div id=\"masthead\">  \n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-7\">\n          <h1>Log-In\n            <p class=\"lead\"></p>\n          </h1>\n        </div>\n        <div class=\"col-md-5\">\n          <div class=\"well well-lg\"> \n            <div class=\"row\">\n              <div class=\"col-sm-12\">\n                \n              \n              </div>\n            </div> \n          </div>\n        </div>\n      </div> \n    </div><!-- /cont -->\n    \n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"top-spacer\"> </div>\n        </div>\n      </div> \n    </div><!-- /cont -->\n    \n  </div>\n  \n  \n  <div class=\"container\">\n    <div class=\"row\">\n      \n      <div class=\"col-md-12\"> \n        \n        <div class=\"panel\">\n          <div class=\"panel-body\">\n              <div class=\"registration-form\">\n                  <form method=\"POST\" id=\"form\" #userlogin=\"ngForm\" action=\"/login\" (ngSubmit)=\"loginUser()\">\n                      <div class=\"form-group\">                        \n                          <h3>Enter your credentials.</h3>\n                      </div>\n                      <br><br>\n\n\n                      <div class=\"form-group\">\n                        <label>User Name</label>\n                          <input type=\"text\" name=\"username\" class=\"form-control item\" [(ngModel)]=\"user.uname\" \n                          id=\"username\" #uname=\"ngModel\"  placeholder=\"Enter User Name\" required minlength=\"4\">\n                          \n                          <label *ngIf=\"uname.invalid && (uname.dirty || uname.touched) && uname.errors.required\" class=\"alert alert-danger\">\n                            <p>Name is required.</p>                             \n                          </label>\n\n                          <label *ngIf=\"uname.invalid && uname.errors.minlength\" class=\"alert alert-danger\">\n                            <p>Name must be at least 4 characters long.</p>               \n                          </label>\n                      </div>\n\n                      \n                      <div class=\"form-group\">\n                        <label>Password</label>\n                        <input type=\"password\" name=\"password\" class=\"form-control item\" [(ngModel)]=\"user.password\" \n                        id=\"password\" #pass=\"ngModel\" placeholder=\"Enter Password\" required minlength=\"8\">\n                        <label *ngIf=\"pass.invalid && (pass.dirty || pass.touched) && pass.errors.required\" class=\"alert alert-danger\">\n                          <p>Password is required.</p>                             \n                        </label>\n\n                        <label *ngIf=\"pass.invalid && uname.errors.minlength\" class=\"alert alert-danger\">\n                          <p>Name must be at least 8 characters long.</p>               \n                        </label>\n                      </div>\n                     \n                      <div class=\"form-group\">\n                          <button type=\"submit\" [disabled]=\"userlogin.form.invalid\" class=\"btn btn-block create-account\" id=\"loginBtn\">Login</button>\n                      </div>\n                  </form>\n              </div>\n            \n            \n            \n            \n            \n          \n            \n          </div>\n        </div>\n                                                                                         \n                                                      \n                                                        \n         </div><!--/col-12-->\n    </div>\n  </div>\n                                                  \n                                                                                  \n  <hr>\n  ","import { Injectable } from '@angular/core';\nimport {HttpClient ,HttpResponse} from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  item= {\n    firstname :'',\n    lastnane:'',\n    username:'',\n    email:'',\n    mobno:'',\n    password:''}\n  constructor(private http:HttpClient) { }\n  newUser(item:any)\n  {   \n    return this.http.post(\"http://localhost:3000/userdetails\",{\"user\":item})\n    .subscribe(data =>{console.log(data)})\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}